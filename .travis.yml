language: rust
sudo: false

INSTALL_NODE_VIA_NVM: &INSTALL_NODE_VIA_NVM |
  rustup target add wasm32-unknown-unknown
  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
  source ~/.nvm/nvm.sh
  nvm install 10

# Cache `cargo install`ed tools, but don't cache the project's `target`
# directory (which ends up over-caching and filling all disk space!)
cache:
  directories:
    - /home/travis/.cargo

script:
  - cargo build --verbose --all
  - cargo test --verbose --all

matrix:
  allow_failures:
    - name: Tests
  include:
    - name: Page
      rust: stable
      before_script:
        - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -f
      install:
        - *INSTALL_NODE_VIA_NVM
      script:
        - mkdir -p docs
        - rm -rf ./docs/*
        - wasm-pack build
        - cd www && npm install
        - npm run build
        - mv ./dist/* ../docs
      deploy:
        provider: pages
        skip-cleanup: true
        github-token: $GH_TOKEN
        local-dir: docs
        keep-history: false

    - name: Tests
      env: RUST_BACKTRACE=1
      rust: stable
      addons:
        firefox: latest
        chrome: stable
      before_script:
        - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -f
      install:
        - *INSTALL_NODE_VIA_NVM
      script:
        - cargo test --all
        - cargo test --all --target wasm32-unknown-unknown

    # Builds with wasm-pack.
    - rust: beta
      env: RUST_BACKTRACE=1
      addons:
        firefox: latest
        chrome: stable
      before_script:
        - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
        - (test -x $HOME/.cargo/bin/cargo-generate || cargo install --vers "^0.2" cargo-generate)
        - cargo install-update -a
        - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -f
      script:
        - cargo generate --git . --name testing
        # Having a broken Cargo.toml (in that it has curlies in fields) anywhere
        # in any of our parent dirs is problematic.
        - mv Cargo.toml Cargo.toml.tmpl
        - cd testing
        - wasm-pack build
        - wasm-pack test --chrome --firefox --headless

    # Builds on nightly.
    - rust: nightly
      env: RUST_BACKTRACE=1
      before_script:
        - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
        - (test -x $HOME/.cargo/bin/cargo-generate || cargo install --vers "^0.2" cargo-generate)
        - cargo install-update -a
        - rustup target add wasm32-unknown-unknown
      script:
        - cargo generate --git . --name testing
        - mv Cargo.toml Cargo.toml.tmpl
        - cd testing
        - cargo check
        - cargo check --target wasm32-unknown-unknown
        - cargo check                                 --no-default-features
        - cargo check --target wasm32-unknown-unknown --no-default-features
        - cargo check                                 --no-default-features --features console_error_panic_hook
        - cargo check --target wasm32-unknown-unknown --no-default-features --features console_error_panic_hook
        - cargo check                                 --no-default-features --features "console_error_panic_hook wee_alloc"
        - cargo check --target wasm32-unknown-unknown --no-default-features --features "console_error_panic_hook wee_alloc"

    # Builds on beta.
    - rust: beta
      env: RUST_BACKTRACE=1
      before_script:
        - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
        - (test -x $HOME/.cargo/bin/cargo-generate || cargo install --vers "^0.2" cargo-generate)
        - cargo install-update -a
        - rustup target add wasm32-unknown-unknown
      script:
        - cargo generate --git . --name testing
        - mv Cargo.toml Cargo.toml.tmpl
        - cd testing
        - cargo check
        - cargo check --target wasm32-unknown-unknown
        - cargo check                                 --no-default-features
        - cargo check --target wasm32-unknown-unknown --no-default-features
        - cargo check                                 --no-default-features --features console_error_panic_hook
        - cargo check --target wasm32-unknown-unknown --no-default-features --features console_error_panic_hook
        # Note: no enabling the `wee_alloc` feature here because it requires
        # nightly for now.

notifications:
  email:
    on_success: never
